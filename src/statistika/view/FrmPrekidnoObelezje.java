/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package statistika.view;

import java.util.Vector;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import statistika.domain.PrekidniTip;

/**
 *
 * @author Paun
 */
public class FrmPrekidnoObelezje extends javax.swing.JDialog {

    PrekidniTip pt;
  

    /**
     * Creates new form FrmPrekidnoObelezje
     */
    public FrmPrekidnoObelezje(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        prepareFormView();
        setTitle("Prekidno obelezje");
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtBrojRazlicitihObelezja = new javax.swing.JTextField();
        btnKreiraj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrekidnoObelezje = new javax.swing.JTable();
        btnUzmiPodatkeIzTabele = new javax.swing.JButton();
        btnIzracunajParametre = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRezultati = new javax.swing.JTextArea();
        panelParametri = new javax.swing.JPanel();
        cbKAsimetrije = new javax.swing.JCheckBox();
        cbKSpljostenosti = new javax.swing.JCheckBox();
        cbKoeficijentVarijacije = new javax.swing.JCheckBox();
        cbRazmakVarijacije = new javax.swing.JCheckBox();
        cbSrednjaDevijacija = new javax.swing.JCheckBox();
        cbStandDevijacija = new javax.swing.JCheckBox();
        cbVarijansa = new javax.swing.JCheckBox();
        cbKvartilnaDevijacija = new javax.swing.JCheckBox();
        cbTreciKvartil = new javax.swing.JCheckBox();
        cbPrviKvartil = new javax.swing.JCheckBox();
        cbXBar = new javax.swing.JCheckBox();
        cbMedijana = new javax.swing.JCheckBox();
        cbModus = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Koliko ima razlicitih vrednosti datog obelezja:");

        btnKreiraj.setText("Kreiraj tabelu za podatke");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        tblPrekidnoObelezje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "i:", "Xi", "fi", "ci"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrekidnoObelezje);
        if (tblPrekidnoObelezje.getColumnModel().getColumnCount() > 0) {
            tblPrekidnoObelezje.getColumnModel().getColumn(0).setResizable(false);
            tblPrekidnoObelezje.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblPrekidnoObelezje.getColumnModel().getColumn(3).setResizable(false);
        }

        btnUzmiPodatkeIzTabele.setText("Potvrdi unese podatke iz tabele!");
        btnUzmiPodatkeIzTabele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUzmiPodatkeIzTabeleActionPerformed(evt);
            }
        });

        btnIzracunajParametre.setText("Izracunaj selektovane parametre");
        btnIzracunajParametre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzracunajParametreActionPerformed(evt);
            }
        });

        txtRezultati.setColumns(20);
        txtRezultati.setRows(5);
        jScrollPane2.setViewportView(txtRezultati);

        panelParametri.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametri"));

        cbKAsimetrije.setText("koeficijent asimetrije");
        cbKAsimetrije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKAsimetrijeActionPerformed(evt);
            }
        });

        cbKSpljostenosti.setText("koeficijent spoljostenosti");
        cbKSpljostenosti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKSpljostenostiActionPerformed(evt);
            }
        });

        cbKoeficijentVarijacije.setText("koeficijent varijacije");
        cbKoeficijentVarijacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKoeficijentVarijacijeActionPerformed(evt);
            }
        });

        cbRazmakVarijacije.setText("razmak varijacije");
        cbRazmakVarijacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRazmakVarijacijeActionPerformed(evt);
            }
        });

        cbSrednjaDevijacija.setText("srednja devijacija");
        cbSrednjaDevijacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSrednjaDevijacijaActionPerformed(evt);
            }
        });

        cbStandDevijacija.setText("standardna devijacija");
        cbStandDevijacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStandDevijacijaActionPerformed(evt);
            }
        });

        cbVarijansa.setText("varijansa");
        cbVarijansa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVarijansaActionPerformed(evt);
            }
        });

        cbKvartilnaDevijacija.setText("kvartilna devijacija");
        cbKvartilnaDevijacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKvartilnaDevijacijaActionPerformed(evt);
            }
        });

        cbTreciKvartil.setText("treci kvartil");
        cbTreciKvartil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTreciKvartilActionPerformed(evt);
            }
        });

        cbPrviKvartil.setText("prvi kvartil");
        cbPrviKvartil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPrviKvartilActionPerformed(evt);
            }
        });

        cbXBar.setText("xBar");
        cbXBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbXBarActionPerformed(evt);
            }
        });

        cbMedijana.setText("medijana");
        cbMedijana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMedijanaActionPerformed(evt);
            }
        });

        cbModus.setText("modus");
        cbModus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbModusItemStateChanged(evt);
            }
        });
        cbModus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbModusActionPerformed(evt);
            }
        });

        jButton1.setText("Seletuj sve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelParametriLayout = new javax.swing.GroupLayout(panelParametri);
        panelParametri.setLayout(panelParametriLayout);
        panelParametriLayout.setHorizontalGroup(
            panelParametriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelParametriLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(panelParametriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbKAsimetrije)
                    .addComponent(cbKvartilnaDevijacija)
                    .addComponent(cbStandDevijacija)
                    .addComponent(cbVarijansa)
                    .addComponent(cbKSpljostenosti)
                    .addComponent(cbKoeficijentVarijacije)
                    .addComponent(cbRazmakVarijacije)
                    .addComponent(cbSrednjaDevijacija)
                    .addComponent(cbMedijana)
                    .addComponent(cbPrviKvartil)
                    .addComponent(cbXBar)
                    .addComponent(cbTreciKvartil)
                    .addComponent(cbModus))
                .addGap(26, 26, 26))
            .addGroup(panelParametriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelParametriLayout.setVerticalGroup(
            panelParametriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelParametriLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbModus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbMedijana)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbXBar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPrviKvartil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTreciKvartil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbKvartilnaDevijacija)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbVarijansa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbStandDevijacija)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSrednjaDevijacija)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRazmakVarijacije)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbKoeficijentVarijacije)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbKSpljostenosti)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbKAsimetrije)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBrojRazlicitihObelezja, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUzmiPodatkeIzTabele, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(panelParametri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzracunajParametre)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtBrojRazlicitihObelezja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(btnKreiraj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnIzracunajParametre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUzmiPodatkeIzTabele)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelParametri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
    btnUzmiPodatkeIzTabele.setEnabled(true);
// DefaultTableModel model=(DefaultTableModel) tblPrekidnoObelezje.getModel(); TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblPrekidnoObelezje.getModel();

        model.getDataVector().removeAllElements();//
        //OVAKO SE BRISU SVI REDOVI TABELE
        //ja moram da brisem svaki put pre dodavanja novih redova 

        int brojObelezja = 0;
        brojObelezja = Integer.parseInt(txtBrojRazlicitihObelezja.getText().trim());

        //moram preko modela da dodam
        for (int i = 0; i < brojObelezja; i++) {
            Object[] rowData = new Object[]{i + 1, "", ""};
            //sada preko modela pozivam fju za dodavanje reda
            model.insertRow(i, rowData);

        }
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnUzmiPodatkeIzTabeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUzmiPodatkeIzTabeleActionPerformed
    
// TODO add your handling code here:
        
        pt=new PrekidniTip(Integer.parseInt(txtBrojRazlicitihObelezja.getText().trim()));
       
        //System.out.println(obelezje.length);
        //table.getModel().getValueAt(row_index, col_index);
        // u zavisnosti od kolone ja se krecem po svim redovima te kolone i uzimam podatke
        // da bih mogao da uzmem index kolone treba mi column model tabeke
        int ukupnoRedova = tblPrekidnoObelezje.getRowCount();
        //  System.out.println(ukupnoRedova);
        DefaultTableModel model = (DefaultTableModel) tblPrekidnoObelezje.getModel();

       //Odavde se uzimaju podaci i smestaju i nizove xi fi ci
        int j = 1, i = 0;
        for (i = 0; i < ukupnoRedova; i++) {
            pt.obelezje[i] = Double.parseDouble((String) model.getValueAt(i, j));
            //System.out.println(obelezje[i]);
        }
        j = 2;
        for (i = 0; i < ukupnoRedova; i++) {
            pt.frekvencija[i] = Double.parseDouble((String) model.getValueAt(i, j));
            //System.out.println(frekvencija[i]);
        }

        double suma = 0;

        for (i = 0; i < ukupnoRedova; i++) {
            suma = suma + pt.frekvencija[i];
            pt.ci[i] = suma;
            model.setValueAt(pt.ci[i], i, 3);
        }
//DO OVDEEEEEEEEEEEEEEEEE
    
  
   
   
  
            btnIzracunajParametre.setEnabled(true);
        
    
    
    }//GEN-LAST:event_btnUzmiPodatkeIzTabeleActionPerformed

    private void cbModusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbModusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbModusActionPerformed

    private void cbMedijanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMedijanaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMedijanaActionPerformed

    private void cbPrviKvartilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPrviKvartilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPrviKvartilActionPerformed

    private void cbXBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbXBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbXBarActionPerformed

    private void cbKvartilnaDevijacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKvartilnaDevijacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKvartilnaDevijacijaActionPerformed

    private void cbTreciKvartilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTreciKvartilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTreciKvartilActionPerformed

    private void cbStandDevijacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStandDevijacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStandDevijacijaActionPerformed

    private void cbVarijansaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVarijansaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbVarijansaActionPerformed

    private void cbKSpljostenostiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKSpljostenostiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKSpljostenostiActionPerformed

    private void cbKoeficijentVarijacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKoeficijentVarijacijeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKoeficijentVarijacijeActionPerformed

    private void cbRazmakVarijacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRazmakVarijacijeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRazmakVarijacijeActionPerformed

    private void cbSrednjaDevijacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSrednjaDevijacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSrednjaDevijacijaActionPerformed

    private void cbKAsimetrijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKAsimetrijeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKAsimetrijeActionPerformed

    private void cbModusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbModusItemStateChanged
        
    }//GEN-LAST:event_cbModusItemStateChanged

    private void btnIzracunajParametreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzracunajParametreActionPerformed
       String message="";
        if(cbModus.isSelected()){
           message+="Modus: "+pt.modus()+"\n";
       }
        if(cbMedijana.isSelected()){
            message+="Medijana: "+pt.median()+"\n";
        }
        if(cbXBar.isSelected()){
            message+="XBar :"+pt.xBar()+"\n";
        }
        if(cbPrviKvartil.isSelected()){
            message+="x(0.25)="+pt.prviKvratil()+"\n";
        }
        if(cbTreciKvartil.isSelected()){
            message+="x(0.75)="+pt.cetvtiKvartil()+"\n";
        }
        if(cbKvartilnaDevijacija.isSelected()){
            message+="Kvartilna devijacija: "+pt.kvartilnaDevijacija()+"\n";
        }
        if(cbVarijansa.isSelected()){
            message+="Varijansa: "+pt.varijansa()+"\n";
        }
        if(cbStandDevijacija.isSelected()){
            message+="Standardna devijacija: "+pt.standradnaDevijacija()+"\n";
        }
        if(cbSrednjaDevijacija.isSelected()){
            message+="Srednja devijacija: "+pt.srednjaDevijacija()+"\n";
        }
        if(cbRazmakVarijacije.isSelected()){
            message+="Razmak varijacije: "+pt.razmakVarijacije()+"\n";
        }
        if(cbKoeficijentVarijacije.isSelected()){
            message+="Koeficijent varijacije: "+pt.koeficientVarijacije()+"\n";
        }
        if(cbKSpljostenosti.isSelected()){
            message+="Koeficijent spljostenosti: "+pt.koeficientSpljostenosti()+"\n";;
        }
        if(cbKAsimetrije.isSelected()){
            message+="Koeficijent asimetije:"+pt.koeficientAsimetrije()+"\n";
                    
        }
        txtRezultati.setText(message);
    }//GEN-LAST:event_btnIzracunajParametreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          cbModus.setSelected(true);
        cbMedijana.setSelected(true);
        cbXBar.setSelected(true);
        cbPrviKvartil.setSelected(true);
        cbTreciKvartil.setSelected(true);
        cbKvartilnaDevijacija.setSelected(true);
        cbVarijansa.setSelected(true);
        cbSrednjaDevijacija.setSelected(true);
        cbStandDevijacija.setSelected(true);
        cbRazmakVarijacije.setSelected(true);
        cbKAsimetrije.setSelected(true);
        cbKSpljostenosti.setSelected(true);
        cbKoeficijentVarijacije.setSelected(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzracunajParametre;
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnUzmiPodatkeIzTabele;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbKAsimetrije;
    private javax.swing.JCheckBox cbKSpljostenosti;
    private javax.swing.JCheckBox cbKoeficijentVarijacije;
    private javax.swing.JCheckBox cbKvartilnaDevijacija;
    private javax.swing.JCheckBox cbMedijana;
    private javax.swing.JCheckBox cbModus;
    private javax.swing.JCheckBox cbPrviKvartil;
    private javax.swing.JCheckBox cbRazmakVarijacije;
    private javax.swing.JCheckBox cbSrednjaDevijacija;
    private javax.swing.JCheckBox cbStandDevijacija;
    private javax.swing.JCheckBox cbTreciKvartil;
    private javax.swing.JCheckBox cbVarijansa;
    private javax.swing.JCheckBox cbXBar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelParametri;
    private javax.swing.JTable tblPrekidnoObelezje;
    private javax.swing.JTextField txtBrojRazlicitihObelezja;
    private javax.swing.JTextArea txtRezultati;
    // End of variables declaration//GEN-END:variables

    private void prepareFormView() {
    btnUzmiPodatkeIzTabele.setEnabled(false);
    btnIzracunajParametre.setEnabled(false);
    txtRezultati.setEnabled(false);
    }

}
